# ---------------------------------------------------------------------------------------------------------------------------------
# Network Settings
# These settings provide fine-grained control over the network behavior and packet handling within the server application.
# Adjusting these parameters can help optimize network performance and ensure secure communication between the server and clients.
# ---------------------------------------------------------------------------------------------------------------------------------

# Client pool size for reading client packets.
# Each pool is executed on a separate thread.
# Default: 100
ClientReadPoolSize = 100

# Client pool size for sending server packets.
# Each pool is executed on a separate thread.
# Default: 100
ClientSendPoolSize = 100

# Client pool size for executing client packets.
# Each pool is executed on a separate thread.
# Default: 100
ClientExecutePoolSize = 100

# Expected client packet count queued by the server.
# Default: 80
PacketQueueLimit = 80

# Disconnect client when queue has reached the queue packet limit.
# Default: True
PacketFloodDisconnect = True

# Drop packets when queue has reached the queue packet limit.
# Default: False
PacketFloodDrop = False

# Log message when queue has reached the queue packet limit.
# Default: True
PacketFloodLogged = True

# Log message when packet decryption has failed.
# Default: False
FailedDecryptionLogged = False

# Nagle's algorithm tries to conserve bandwidth by minimizing the number of segments that are sent.
# When applications wish to decrease network latency, they can disable Nagle's algorithm (by enabling TcpNoDelay).
# Data will be sent earlier, at the cost of an increase in bandwidth consumption.
# Default: True (disabled)
TcpNoDelay = True
